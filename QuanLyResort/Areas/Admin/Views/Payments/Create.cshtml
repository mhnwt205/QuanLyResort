@model QuanLyResort.ViewModels.CreatePaymentDto

@{
    Layout = "~/Areas/Admin/Views/Shared/_AdminLayout.cshtml";
    ViewData["Title"] = "Tạo thanh toán mới";
}

<div class="container-xxl flex-grow-1 container-p-y">
    <div class="d-flex justify-content-between align-items-center mb-4">
        <h4 class="mb-0">Tạo thanh toán mới</h4>
        <a href="@Url.Action("Index", "Payments", new { area = "Admin" })" class="btn btn-secondary">
            <i class="bx bx-arrow-back"></i> Quay lại
        </a>
    </div>

    <div class="row">
        <div class="col-lg-8">
            <div class="card">
                <div class="card-header">
                    <h5 class="card-title mb-0">Thông tin thanh toán</h5>
                </div>
                <div class="card-body">
                    <form asp-action="Create" method="post">
                        <div asp-validation-summary="ModelOnly" class="text-danger"></div>
                        
                        <div class="row">
                            <div class="col-md-6">
                                <div class="mb-3">
                                    <label asp-for="InvoiceId" class="form-label">Hóa đơn *</label>
                                    <select asp-for="InvoiceId" class="form-select" id="invoiceSelect">
                                        <option value="">-- Chọn hóa đơn --</option>
                                        @foreach (var invoice in ViewBag.Invoices)
                                        {
                                            <option value="@invoice.InvoiceId" 
                                                    data-customer="@(invoice.Customer?.FirstName + " " + invoice.Customer?.LastName)"
                                                    data-total="@invoice.TotalAmount"
                                                    data-paid="@(await Context.RequestServices.GetRequiredService<QuanLyResort.Services.Interfaces.IPaymentService>().GetTotalPaidAmountAsync(invoice.InvoiceId))">
                                                @invoice.InvoiceNumber - @(invoice.Customer?.FirstName + " " + invoice.Customer?.LastName) - @invoice.TotalAmount.ToString("N0") VNĐ
                                            </option>
                                        }
                                    </select>
                                    <span asp-validation-for="InvoiceId" class="text-danger"></span>
                                </div>
                            </div>
                            <div class="col-md-6">
                                <div class="mb-3">
                                    <label asp-for="PaymentDate" class="form-label">Ngày thanh toán *</label>
                                    <input asp-for="PaymentDate" class="form-control" type="date" />
                                    <span asp-validation-for="PaymentDate" class="text-danger"></span>
                                </div>
                            </div>
                        </div>

                        <div class="row">
                            <div class="col-md-6">
                                <div class="mb-3">
                                    <label asp-for="Amount" class="form-label">Số tiền *</label>
                                    <input asp-for="Amount" class="form-control" type="number" step="0.01" id="amountInput" />
                                    <span asp-validation-for="Amount" class="text-danger"></span>
                                    <div class="form-text" id="remainingAmountText"></div>
                                </div>
                            </div>
                            <div class="col-md-6">
                                <div class="mb-3">
                                    <label asp-for="PaymentMethod" class="form-label">Phương thức thanh toán *</label>
                                    <select asp-for="PaymentMethod" class="form-select">
                                        <option value="">-- Chọn phương thức --</option>
                                        <option value="cash">Tiền mặt</option>
                                        <option value="card">Thẻ</option>
                                        <option value="transfer">Chuyển khoản</option>
                                        <option value="other">Khác</option>
                                    </select>
                                    <span asp-validation-for="PaymentMethod" class="text-danger"></span>
                                </div>
                            </div>
                        </div>

                        <div class="row">
                            <div class="col-md-6">
                                <div class="mb-3">
                                    <label asp-for="ReferenceNumber" class="form-label">Số tham chiếu</label>
                                    <input asp-for="ReferenceNumber" class="form-control" placeholder="Số thẻ, mã giao dịch..." />
                                    <span asp-validation-for="ReferenceNumber" class="text-danger"></span>
                                </div>
                            </div>
                        </div>

                        <div class="mb-3">
                            <label asp-for="Notes" class="form-label">Ghi chú</label>
                            <textarea asp-for="Notes" class="form-control" rows="3" placeholder="Ghi chú về thanh toán..."></textarea>
                            <span asp-validation-for="Notes" class="text-danger"></span>
                        </div>

                        <div class="d-flex justify-content-end">
                            <button type="submit" class="btn btn-primary">
                                <i class="bx bx-save"></i> Tạo thanh toán
                            </button>
                        </div>
                    </form>
                </div>
            </div>
        </div>

        <div class="col-lg-4">
            <div class="card">
                <div class="card-header">
                    <h5 class="card-title mb-0">Thông tin hóa đơn</h5>
                </div>
                <div class="card-body" id="invoice-info">
                    <p class="text-muted">Chọn hóa đơn để xem thông tin chi tiết</p>
                </div>
            </div>

            <div class="card mt-3">
                <div class="card-header">
                    <h5 class="card-title mb-0">Hướng dẫn</h5>
                </div>
                <div class="card-body">
                    <ul class="list-unstyled">
                        <li><i class="bx bx-check text-success me-2"></i> Chọn hóa đơn cần thanh toán</li>
                        <li><i class="bx bx-check text-success me-2"></i> Nhập số tiền thanh toán</li>
                        <li><i class="bx bx-check text-success me-2"></i> Chọn phương thức thanh toán</li>
                        <li><i class="bx bx-check text-success me-2"></i> Nhập số tham chiếu nếu có</li>
                        <li><i class="bx bx-check text-success me-2"></i> Hệ thống sẽ tự động cập nhật trạng thái hóa đơn</li>
                    </ul>
                </div>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script>
        document.addEventListener('DOMContentLoaded', function() {
            // Set default date
            const today = new Date();
            document.querySelector('input[name="PaymentDate"]').value = today.toISOString().split('T')[0];

            // Handle invoice selection
            document.getElementById('invoiceSelect').addEventListener('change', function() {
                const selectedOption = this.options[this.selectedIndex];
                const invoiceInfo = document.getElementById('invoice-info');
                const amountInput = document.getElementById('amountInput');
                const remainingAmountText = document.getElementById('remainingAmountText');

                if (this.value) {
                    const customer = selectedOption.dataset.customer;
                    const total = parseFloat(selectedOption.dataset.total);
                    const paid = parseFloat(selectedOption.dataset.paid) || 0;
                    const remaining = total - paid;

                    invoiceInfo.innerHTML = `
                        <table class="table table-borderless">
                            <tr>
                                <td class="fw-semibold">Khách hàng:</td>
                                <td>${customer}</td>
                            </tr>
                            <tr>
                                <td class="fw-semibold">Tổng tiền:</td>
                                <td><span class="fw-bold">${total.toLocaleString('vi-VN')} VNĐ</span></td>
                            </tr>
                            <tr>
                                <td class="fw-semibold">Đã thanh toán:</td>
                                <td><span class="text-success">${paid.toLocaleString('vi-VN')} VNĐ</span></td>
                            </tr>
                            <tr>
                                <td class="fw-semibold">Còn lại:</td>
                                <td><span class="fw-bold text-warning">${remaining.toLocaleString('vi-VN')} VNĐ</span></td>
                            </tr>
                        </table>
                    `;

                    // Set default amount to remaining amount
                    amountInput.value = remaining.toFixed(2);
                    remainingAmountText.innerHTML = `<small class="text-muted">Số tiền còn lại: ${remaining.toLocaleString('vi-VN')} VNĐ</small>`;
                } else {
                    invoiceInfo.innerHTML = '<p class="text-muted">Chọn hóa đơn để xem thông tin chi tiết</p>';
                    amountInput.value = '';
                    remainingAmountText.innerHTML = '';
                }
            });

            // Validate amount when typing
            document.getElementById('amountInput').addEventListener('input', function() {
                const selectedOption = document.getElementById('invoiceSelect').options[document.getElementById('invoiceSelect').selectedIndex];
                if (selectedOption && selectedOption.value) {
                    const total = parseFloat(selectedOption.dataset.total);
                    const paid = parseFloat(selectedOption.dataset.paid) || 0;
                    const remaining = total - paid;
                    const amount = parseFloat(this.value) || 0;

                    if (amount > remaining) {
                        this.setCustomValidity('Số tiền thanh toán không được vượt quá số tiền còn lại');
                    } else if (amount <= 0) {
                        this.setCustomValidity('Số tiền thanh toán phải lớn hơn 0');
                    } else {
                        this.setCustomValidity('');
                    }
                }
            });
        });
    </script>
}
